name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Wait for CI
      - name: Wait for CI
        id: wait_ci
        uses: ahmadnassri/action-workflow-run-wait@v1
        with:
          workflow: flutter_ci.yml
          ref: refs/heads/main

      - name: Fail if CI failed
        if: steps.wait_ci.outputs.conclusion != 'success'
        run: |
          echo "CI workflow failed or did not succeed, aborting release."
          exit 1

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get RELEASE.md from dev branch at merged commit
        id: release_note
        run: |
          git fetch origin dev
          if git show origin/dev:RELEASE.md > RELEASE.md 2>/dev/null; then
            echo "Fetched RELEASE.md from dev branch."
          else
            echo "No release notes found." > RELEASE.md
            echo "No RELEASE.md found on dev."
          fi

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build appbundle
        run: flutter build appbundle

      - name: Build APK (universal)
        run: flutter build apk

      - name: Build APK (per-ABI)
        run: flutter build apk --split-per-abi

      - name: Rename APKs, AABs, and their sha1 files to use easyLoc
        run: |
          set -e
          shopt -s nullglob
          # APKs and their sha1s
          APK_DIR=build/app/outputs/flutter-apk
          if [ -d "$APK_DIR" ]; then
            cd "$APK_DIR"
            for file in app-*-release.apk app-release.apk; do
              if [ -f "$file" ]; then
                newfile=$(echo "$file" | sed 's/app/easyLoc/g')
                mv "$file" "$newfile"
                # Rename corresponding sha1 file if it exists
                if [ -f "${file}.sha1" ]; then
                  mv "${file}.sha1" "${newfile}.sha1"
                fi
              fi
            done
            cd - >/dev/null
          fi
          # AAB and its sha1
          AAB_DIR=build/app/outputs/bundle/release
          if [ -d "$AAB_DIR" ]; then
            cd "$AAB_DIR"
            for file in app-release.aab; do
              if [ -f "$file" ]; then
                newfile=$(echo "$file" | sed 's/app/easyLoc/g')
                mv "$file" "$newfile"
                # Rename corresponding sha1 file if it exists
                if [ -f "${file}.sha1" ]; then
                  mv "${file}.sha1" "${newfile}.sha1"
                fi
              fi
            done
            cd - >/dev/null
          fi

      - name: Collect SHA1 checksums and append to release notes
        run: |
          set -e
          echo -e '\n<details open="">' >> RELEASE.md
          echo '<summary>File Checksums (SHA-1)</summary>' >> RELEASE.md
          echo '<div class="snippet-clipboard-content notranslate position-relative overflow-auto"><pre class="notranslate"><code>' >> RELEASE.md
          # Append AAB checksum
          AAB_DIR=build/app/outputs/bundle/release
          if [ -f "$AAB_DIR/easyLoc-release.aab.sha1" ]; then
            cat "$AAB_DIR/easyLoc-release.aab.sha1" >> RELEASE.md
          fi
          # Append APK checksums
          APK_DIR=build/app/outputs/flutter-apk
          if [ -d "$APK_DIR" ]; then
            for f in easyLoc-*.apk.sha1 easyLoc-release.apk.sha1; do
              [ -f "$APK_DIR/$f" ] && cat "$APK_DIR/$f" >> RELEASE.md
            done
          fi
          echo '</code></pre></div></details>' >> RELEASE.md

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(awk -F': ' '/^version: / {print $2}' pubspec.yaml | head -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "v${{ steps.version.outputs.version }}"
          body_path: RELEASE.md
          files: |
            build/app/outputs/bundle/release/easyLoc-release.aab
            build/app/outputs/flutter-apk/easyLoc-release.apk
            build/app/outputs/flutter-apk/easyLoc-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/easyLoc-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/easyLoc-x86_64-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}